name: Build and Release
on:
  push:
    tags: ['v*']
  workflow_dispatch:

jobs:
  windows-x64:
    name: Build Windows x64
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (Yarn)
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.0'
          cache: 'yarn'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: x86_64-pc-windows-msvc

      - name: Install Inno Setup
        run: choco install innosetup -y

      - name: Install frontend dependencies
        run: yarn install

      - name: Build Tauri
        run: |
          yarn tauri build --target x86_64-pc-windows-msvc
          ISCC.exe "${GITHUB_WORKSPACE}/src-tauri/installer/windows.iss"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-x64-binaries
          path: |
            src-tauri/target/release/*.exe
            src-tauri/target/release/bundle/**/*.msi

  linux-x64:
    name: Build Linux x64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (Yarn)
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.0'
          cache: 'yarn'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: x86_64-unknown-linux-gnu

      - name: Install Linux Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev

      - name: Install frontend dependencies
        run: yarn install

      - name: Build Tauri
        run: yarn tauri build --target x86_64-unknown-linux-gnu

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-x64-binaries
          path: |
            src-tauri/target/release/*.deb
            src-tauri/target/release/bundle/**/*.AppImage

  linux-arm64:
    name: Build Linux ARM64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (Yarn)
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.0'
          cache: 'yarn'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: aarch64-unknown-linux-gnu

      - name: Install Linux Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install frontend dependencies
        run: yarn install

      - name: Build Tauri
        run: yarn tauri build --target aarch64-unknown-linux-gnu

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-arm64-binaries
          path: |
            src-tauri/target/release/*.deb
            src-tauri/target/release/bundle/**/*.AppImage

  macos-x64:
    name: Build macOS x64
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (Yarn)
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.0'
          cache: 'yarn'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: x86_64-apple-darwin

      - name: Install frontend dependencies
        run: yarn install

      - name: Build Tauri
        run: yarn tauri build --target x86_64-apple-darwin

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-x64-binaries
          path: |
            src-tauri/target/release/*.app.tar.gz
            src-tauri/target/release/bundle/**/*.dmg

  macos-arm64:
    name: Build macOS ARM64
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (Yarn)
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.0'
          cache: 'yarn'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: aarch64-apple-darwin

      - name: Install frontend dependencies
        run: yarn install

      - name: Build Tauri
        run: yarn tauri build --target aarch64-apple-darwin

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm64-binaries
          path: |
            src-tauri/target/release/*.app.tar.gz
            src-tauri/target/release/bundle/**/*.dmg

  release:
    name: Publish Release
    needs: [windows-x64, linux-x64, linux-arm64, macos-x64, macos-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: "Multi-platform build for ${{ github.ref_name }}"
          files: |
            artifacts/**/*.{exe,msi,deb,appimage,dmg,pkg}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}